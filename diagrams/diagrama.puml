@startuml
class OutdatedVersionException extends HttpException
class InvalidObjectException extends BadRequestException
class ServerTimeoutException extends RequestTimeoutException
class HttpExceptionFilter implements ExceptionFilter {
    +getExceptionName(exception: HttpException): string
    +catch(exception: HttpException, host: ArgumentsHost): Promise<void>
}
class ResponseInterceptor implements NestInterceptor {
    +intercept(context: ExecutionContext, next: CallHandler<any>): Observable<any>
}
class TimeoutInterceptor implements NestInterceptor {
    +intercept(context: ExecutionContext, next: CallHandler<any>): Observable<any>
}
class VersionInterceptor implements NestInterceptor {
    +intercept(context: ExecutionContext, next: CallHandler<any>): Observable<any>
}
class DatabaseModule
class MailerService {
    +sendWelcomeMail(userName: string, address: string): Promise<boolean | MailerResponse>
}
class ServicesModule
class AppModule
class BaseModel extends BaseEntity {
    +id: number
    +createdAt: number
    +updatedAt?: number
    +validate(): Promise<void>
    +update(): Promise<void>
}
class AuthorizeGuard implements CanActivate {
    -reflector: Reflector
    +canActivate(context: ExecutionContext): boolean | Promise<boolean> | Observable<boolean>
}
class JwtAuthGuard {
    +canActivate(context: ExecutionContext): boolean | Promise<boolean> | Observable<boolean>
    +handleRequest(err: any, user: any, info: any): any
}
@enduml